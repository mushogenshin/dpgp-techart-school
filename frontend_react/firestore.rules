rules_version = '2';

service cloud.firestore {    
  match /databases/{database}/documents {
  
  	function isUserOwned(uid) {
    	return request.auth.uid == uid;
  	}
  
  	function isAdmin(requestUid) {
    	let user = get(/databases/$(database)/documents/admins/$(requestUid));
    	return user.data.role in ['admin'];
    }
    
    // ADMIN DOCS: READ/WRITE IF IS ADMIN
    match /admins/{document} {
    	allow read: if isAdmin(request.auth.uid);
      allow write: if isAdmin(request.auth.uid);
    }
    
    // CLASS DOCS: PUBLIC READ; WRITE IF IS ADMIN
    match /classes/{classId=**} {
      allow read;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // MODULE DOCS: PUBLIC READ; WRITE IF IS ADMIN
    match /modules/{moduleId=**} {
    	allow read;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // CONTENT DOCS: READ IF LOGGED IN; WRITE IF IS ADMIN
    match /contents/{unitId=**} {
    	allow read: if request.auth != null;
      allow write: if isAdmin(request.auth.uid);
    }
    
    // USER DOCS: READ IF LOGGED IN; WRITE IF OWNED OR IS ADMIN
    match /users/{uid} {
    	allow read: if request.auth != null;
      allow write: if isUserOwned(uid) || isAdmin(request.auth.uid);
    }
    
    // PUBLIC PAGE DOCS: PUBLIC READ; NO WRITE
    match /public_pages/{pageId=**} {
      allow read;
    }
    
    // ENROLLMENT MIGRATION DOCS: READ IF LOGGED IN; NO WRITE
    match /enrollment_migration/{email} {
    	allow read: if request.auth != null;
    }
    
    // SUBSCRIPTION DOCS: READ IF LOGGED IN; WRITE IF OWNED
    match /subscriptions/{email} {
    	allow read: if request.auth != null;
      allow write: if request.auth.token.email == email;
    }
  }
}